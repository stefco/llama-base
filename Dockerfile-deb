#------------------------------------------------------------------------------
# CREATE docker-meta.yml
ARG DOCKER_TAG
ARG NAME
ARG VERSION
ARG COMMIT
ARG URL
ARG BRANCH
ARG DATE
ARG REPO
ARG DOCKERFILE_PATH
FROM alpine AS meta
ARG DOCKER_TAG
ARG NAME
ARG VERSION
ARG COMMIT
ARG URL
ARG BRANCH
ARG DATE
ARG REPO
ARG DOCKERFILE_PATH
COPY "${DOCKERFILE_PATH}" /provision/"${DOCKERFILE_PATH}"
RUN echo >>/docker-meta.yml "- name: ${NAME}" \
    && echo >>/docker-meta.yml "  version: ${VERSION}" \
    && echo >>/docker-meta.yml "  commit: ${COMMIT}" \
    && echo >>/docker-meta.yml "  url: ${URL}" \
    && echo >>/docker-meta.yml "  branch: ${BRANCH}" \
    && echo >>/docker-meta.yml "  date: ${DATE}" \
    && echo >>/docker-meta.yml "  repo: ${REPO}" \
    && echo >>/docker-meta.yml "  docker_tag: ${DOCKER_TAG}" \
    && echo >>/docker-meta.yml "  dockerfile_path: ${DOCKERFILE_PATH}" \
    && echo >>/docker-meta.yml "  dockerfile: |" \
    && sed >>/docker-meta.yml 's/^/    /' </provision/"${DOCKERFILE_PATH}" \
    && rm -r /provision
# END CREATE docker-meta.yml
#------------------------------------------------------------------------------

FROM debian:stretch-slim

#------------------------------------------------------------------------------
# APPEND docker-meta.yml
COPY --from=meta /docker-meta.yml /new-docker-meta.yml
RUN cat /new-docker-meta.yml >>/docker-meta.yml \
    && echo Full meta: \
    && cat /docker-meta.yml \
    && rm /new-docker-meta.yml
# END APPEND docker-meta.yml
#------------------------------------------------------------------------------

# set up anaconda for user 'llama' and install datagrid
RUN bash -c ' \
    adduser --disabled-password --gecos "" llama \
        && apt-get -y update \
        && apt-get install -y --no-install-recommends \
            psmisc \
            procps \
            ca-certificates \
            curl \
            bzip2 \
            vim \
            git \
            graphviz \
            htop \
            ncdu \
            ssh-client \
            certbot \
        && echo "Installing LIGO DataGrid." \
        || exit 1 \
    v=1; \
    until [ $v -eq 0 ]; do \
        curl https://www.lsc-group.phys.uwm.edu/lscdatagrid/doc/ldg-client.sh | bash; \
        v=$?; \
    done \
        && echo "Installing nodejs" \
        && curl -sL https://deb.nodesource.com/setup_10.x | bash - \
        && apt-get install -y nodejs \
        && rm -rf /var/lib/apt/lists/* \
        && chown -R llama:llama /home/llama \
        && su llama --login --command " \
            cd ~ \
                && curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh >~/miniconda.sh \
                && bash ~/miniconda.sh -b -f -p /home/llama/miniconda3 \
                && rm ~/miniconda.sh \
                && /home/llama/miniconda3/bin/conda update conda \
                && /home/llama/miniconda3/bin/conda update --all \
                && /home/llama/miniconda3/bin/conda config --add channels conda-forge \
                && /home/llama/miniconda3/bin/conda init bash \
                && rm -r ~/miniconda3/pkgs \
                && git config --global user.name LLAMA \
                && git config --global user.email placeholder \
        " \
    ; \
'
